<?php $urlActionValidateForm = BASE_URL. $this->url('code/default',['action' => 'validate']) ?>
<?php 
$hide = "hide";
// ============= Edit Area ================
if(isset($infoForm)){
	$attributeForm = unserialize($infoForm->attribute);	
	$flagEdit      = true;
	$hide          = '';
} 
//=========================================
?>
<div class="container">
	<!-- ADD NEW FORM -->
	<form id="addNameForm" action="post">
		<div class="row box" id="addNameForm">
			<div class="col-md-12">
				<div class="row">
					<div class="col-md-12">
						<div class="form-group">					
							<label for="type">Name Form</label>
							<input type="text" width="360" value="<?php echo @$infoForm->name ?>" class="form-control" name="inputNameForm" />
							<!-- class="hide alert alert-danger alert-dismissable" -->
							<p class="hide text-danger" id="errorNameForm">
                            	Nhập tên Form để tiếp tục !
                            </p>
						</div>
					</div>		
					<div class="col-md-4">
						<div class="form-group">					
							<label for="type">Form action</label>
							<input type="text" value="<?php echo @$attributeForm['action'] ?>" class="form-control" name="formAction"/>
						</div>
					</div>			
					<div class="col-md-4">
						<div class="form-group">					
							<label for="type">Class Form</label>
							<input type="text" value="<?php echo @$attributeForm['class'] ?>" class="form-control" name="formClass"/>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">					
							<label for="type">ID Form</label>
							<input type="text" value="<?php echo @$attributeForm['id'] ?>" class="form-control" name="formId"/>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">					
							<label for="type">Method Form</label>
							<select class="form-control" name="formMethod">
								<option <?php echo (@$attributeForm['method']=='post')? 'selected':'' ?> value="post">POST</option>
								<option <?php echo (@$attributeForm['method']=='get')? 'selected':'' ?> value="get">GET</option>
							</select>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">					
							<label for="type">Entype Form</label>
							<select class="form-control" name="formEntype">
								<option value="empty">Default</option>
								<option <?php echo (@$attributeForm['entype']=='multipart/form-data')? 'selected':'' ?> value="multipart/form-data">Multipart/form-data</option>
								<option <?php echo (@$attributeForm['entype']=='application/x-www-form-urlencoded')? 'selected':'' ?> value="application/x-www-form-urlencoded">Application/x-www-form-urlencoded</option>
								<option <?php echo (@$attributeForm['entype']=='text/plain')? 'selected':'' ?> value="text/plain">Text/plain</option>
							</select>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">					
							<label for="type">Other</label>
							<input type="text" value="<?php echo @$attributeForm['other'] ?>" placeholder="a1:v1,a2:v2" class="form-control" name="formOther"/>
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-4 col-md-offset-5">
			 	<div class="form-group">
			 		<label>&nbsp;</label><br/>
			 		<?php if(!$flagEdit): ?>
			    		<button class="btn btn-primary" type="button" id="createForm">Create Form</button>
			    	<?php endif; ?>
			    </div>
			</div>
		</div>
	</form>
	<!-- END ADD NEW FORM  -->

	<!-- ADD NEW ELEMENT -->
	<form id="validateForm" method="post" class="<?php echo $hide ?>" action ="<?php echo $urlActionValidateForm ?>">
		<div class="row box" id="addNew">
			<div class="col-md-12">
				<div class="row">					 
				 	<div class="col-md-4">
					 	<div class="form-group">
					    	<label for="name">Name Element</label>
					    	<input type="text" id="nameElement" name="nameElement" class="form-control"/>
					    </div>
					</div>
					 
					<div class="col-md-4">
					 	<div class="form-group">
					 		<label>&nbsp;</label><br/>
					    	<button class="btn btn-primary" type="button" id="addNewElement">Add new element</button>
					    	<button type="button" class="btn btn-success" onclick="submitValidateForm()" id="createElement">Save</button>
					    	<!-- lazyButton -->
					    	<button class="btn btn-primary" type="button" id="lazyLabelAddNewElement">Add new element</button>
					    	<button class="btn btn-primary" type="button" id="lazyAddNewElement">OK</button>
					    	<input class="form-control hide" type="text"  id="lazyNameElement"/>
					    	<button type="button" class="btn btn-success" onclick="submitValidateForm()" id="lazyButtonSave">Save</button>
					    </div>
					</div>
				    	
				</div>
				
			</div>
		</div>
		<!-- END ADD NEW ELEMENT -->
		<?php 
			if($infoForm->status == 'active'){
				echo $this->partial("auto-code/form/view_edit.phtml", array('infoForm' => $infoForm, 'validateElement' => $validateElement, 'filterElement' => $filterElement));	
			}else{
				echo $this->partial("auto-code/form/view_not_edit.phtml", array('validateElement' => $validateElement, 'filterElement' => $filterElement));
			}
		?>
			
	</form>
	<input type="hidden" name="formIdHidden" />
</div>
<?php $url = $this->url('code/default',array('action' => 'loadTemplate')) ?>

<script type="text/javascript">
	$(document).ready(function(){
		var firstTime = false;
		var flagName  = '';
		createFormDraf();
		lazySaveButton();
		//=========================== Edit Area ================================//
		<?php if($infoForm->status == 'active'): ?>
			firstTime = true;
			<?php foreach($infoForm->content as $nameElement => $infoElement): ?>
				var nameElement = "<?php echo $nameElement ?>";
				var selector    = '.wrapper-' + nameElement;

				if(flagName === '') flagName = nameElement; // get name of first form for clone purpose
				// add nameElement to span hidden
				$(selector + " >  div:first > span:first").text("[" + nameElement + "] Element");
				//show all form when page loaded
				$(".elementAttrs").removeClass("hide");

				<?php if(count(@$infoElement['validate']['name']) > 0 ): ?>
					<?php foreach(@$infoElement['validate']['name'] as $nameValidate): ?>
						HandleFormOption("<?php echo $nameValidate ?>",nameElement,'.showTemplateValidate','validate','edit');
					<?php endforeach; ?>
				<?php endif; ?>

				<?php if(count(@$infoElement['filter']['name']) > 0 ): ?>
					<?php foreach(@$infoElement['filter']['name'] as $nameFilter): ?>
						HandleFormOption("<?php echo $nameFilter ?>",nameElement,'.showTemplateValidate','filter','edit');
					<?php endforeach; ?>
				<?php endif; ?>

				allMainAction(selector,nameElement);
				checkSelected(selector);
			<?php endforeach; ?>
		<?php endif; ?>
		//=============================================================================//

		//============================ ADD and DRAF=====================================
		$("#addNewElement").on("click",function(){
			if(flagName === ''){
				flagName = $("#nameElement").val();
			}

			if(firstTime === false){ //============= first click :  show form ==============
				firstTime         = true;			
				var nameElement   = flagName;			
				var firstSelector = '.wrapper-' + nameElement;

				// change class wrapper with name of element
				$(".wrapper-1").attr('class','wrapper-'+nameElement);
				// add nameElement ro span hidden
				$(firstSelector + " >  div:first > span:first").text("[" + nameElement + "] Element");

				//show form AddAtrributesElement
				$(".elementAttrs").removeClass("hide");

				allMainAction(firstSelector,nameElement);
		//==================================================================================
		//========================== Not First Element =====================================
			}else{
				var nameElementNotFirst = $("#nameElement").val();
				var notFirstSelector    = ".wrapper-" + nameElementNotFirst;
				// create AnotherForm
				var clone               = $(".elementAttrs:first").clone().find("input:text, textarea").val("").end()
																			.find(".validateList, .filterList, .code").html("").end()
																			.find(".selectbox").removeClass('hide').addClass('hide').removeClass('animated bounce').end()
																			.appendTo('#validateForm');
				// change class wrapper with name of element
				$(".wrapper-" + flagName).not(":first").attr('class',"wrapper-" + nameElementNotFirst);
				// add nameElement ro span hidden
				$(notFirstSelector + " >  div:first > span:first").text("[" + nameElementNotFirst + "] Element");
				
				allMainAction(notFirstSelector,nameElementNotFirst);
			}
		})
		//====================================================================================
	})



	function allMainAction(selector,nameElement){
		changeIdInput(selector,nameElement);
		openTab(selector);
		showOptionSelectBox(selector);
		
		showAndHideElement(selector);

		$(selector + " .setValidate").on("click",function(){
			HandleFormOption(selector,nameElement,'.showTemplateValidate','validate');
		});//handle for Validate

		$(selector + " .setFilter").on("click",function(){
			HandleFormOption(selector,nameElement,'.showTemplateValidate','filter');
		});//handle for Filter

		$(selector + " .previewElement").on("click",function(){
			previewValidateForm(selector)
		});//handle for Preview Code
	}

	function submitValidateForm(){
		var id = $("input[name =formIdHidden]").val()
		<?php if(isset($infoForm)): ?>
			id = "<?php echo $infoForm->id ?>";
		<?php endif; ?>
		$.ajax({
			url  : "<?php echo $this->url("form/default" , array('action' => 'addForm')) ?>",
			type : 'POST',
			data : {
				'nameForm'   : $("input[name=inputNameForm]").val(),
				'actionForm' : $("input[name=formAction]").val(),
				'classForm'  : $("input[name=formClass]").val(),
				'idForm'     : $("input[name=formId]").val(),
				'methodForm' : $("select[name=formMethod]").val(),
				'entypeForm' : $("select[name=formEntype]").val(),
				'otherForm'  : $("input[name=formOther]").val(),
				'element'    : $("#validateForm").serialize(),
				'formId'     : id
			},	
			success : function(data){
				 window.location.href = "<?php echo $this->url("form") ?>"
			}
		})
	}

	function showAndHideElement(selector){
		$(selector + " .openElement").on('click',function(e){
			//show name Element when close form
			var nameElementHidden = $(this).prev().prev();
			var nameElement       = $(this).parent().next().find('.name-element').text();
			nameElementHidden.text(nameElement);
			
			if(nameElementHidden.hasClass('hide')){
				nameElementHidden.removeClass('hide');
			}else{//hide name Element when open form
				nameElementHidden.addClass('hide');
			}
			openCloseElement(this);
		});
	}

	function createFormDraf(selector){
		$("#createForm").click(function(){
			if($("input[name=inputNameForm]").val() === ""){
				$("#errorNameForm").removeClass("hide");
			}else{
				$("#errorNameForm").addClass("hide");
				$.ajax({
					url : "<?php echo $this->url('form/default',array('action' => 'addFormDraf')) ?>",
					type : 'POST',
					data : {
						'nameForm'   : $("input[name=inputNameForm]").val(),
						'actionForm' : $("input[name=formAction]").val(),
						'classForm'  : $("input[name=formClass]").val(),
						'idForm'     : $("input[name=formId]").val(),
						'methodForm' : $("select[name=formMethod]").val(),
						'entypeForm' : $("select[name=formEntype]").val(),
						'otherForm'  : $("input[name=formOther]").val(),
						'user_id'    : "<?php echo $userInfo->id ?>"
					},
					success : function(id){
						if(id !== ''){
							if($("#validateForm").hasClass("hide")){
								$("#validateForm").removeClass("hide");
							}
		
							$("input[name=formIdHidden]").val(id);
						}
					}
				})
			}
		})
	}

	function checkSelected(selector){
		var nameInput = selector.replace(".wrapper-","");

		// get selected value (thu vi) 
		<?php foreach($infoForm->content as $nameElement => $infoElement): ?>
			if(nameInput === '<?php echo $nameElement ?>'){
				var selected = '<?php echo $infoElement['type'] ?>';
			}
		<?php endforeach; ?>

		//checked selected
		$(selector + " .typeElement option").each(function(index,value){
			if($(value).val() === selected){
				$(value).attr("selected","selected");

				if(selected === "select") $(selector).find(".selectbox").removeClass('hide').addClass('animated bounce');		
			}
		})

	}

	function removeElement(selector){
		if(window.confirm("Are you sure for remove this element ? ")) $(selector).parents(".elementAttrs:first").remove();	
	}

	function HandleFormOption(selectorMain,nameElement,selectorTemplate,type,typeHandle = 'add'){
			if(typeHandle === 'add'){// handle for ADD
				if(type === 'validate'){
					var validateValue = $(selectorMain + " [name=validateElement] option:selected").val();
					var validateName  = $(selectorMain + " [name=validateElement] option:selected").text();
				}else if(type === 'filter'){
					var validateValue = $(selectorMain + " [name=filterElement] option:selected").val();
					var validateName  = $(selectorMain + " [name=filterElement] option:selected").text();
				}
			}else{// handle for EDIT
				if(selectorMain === 'Alpha') selectorMain = "Filter-Alpha";
				if(selectorMain === 'Alnum') selectorMain = "Filter-Alnum";
				validateValue = selectorMain;
				validateName  = selectorMain;
				selectorMain  = ".wrapper-" + nameElement;
			}
			
			var fileName      = validateValue.toLowerCase() + '.php';
	
		   	$.ajax({
				url  	 : "<?php echo BASE_URL .  $url ?>",
				data 	 : { 
					fileName : fileName ,
					type 	 : type
				},
				type 	 : 'GET',
				dataType : 'json',
				success  : function(data){				
					if(data.template === 'no'){
						var haveTemplate = 'no';
		    			addValidateRow(selectorMain,validateValue,validateName,nameElement,haveTemplate,type);
					}else{
						var haveTemplate = 'yes';
		    			addValidateRow(selectorMain,validateValue,validateName,nameElement,haveTemplate,type);

						var templateFormated = data.template.replace(/my_element/g,nameElement);
						$(selectorMain + " li[name=" + validateValue + "] "+selectorTemplate).append(templateFormated);

						if(typeHandle === 'edit'){
							bindValidateForm(selectorMain);
							bindFilterForm(selectorMain);
						}

						$(selectorMain + " .show-option-validate").on('click',function(){
							var self               = this;
							var classTemplate      = $(self).attr('href').toLowerCase();
							var selectorOfTemplate = selectorMain + ' .showTemplateValidate ' + classTemplate;
							
						    $(self).prev('span').removeClass('glyphicon-plus').addClass('glyphicon-minus');

						    showValidateTemplate(selectorOfTemplate);
							
							$(selectorMain + " .cancel").on('click',function(){
								hideValidateTemplate(this,self);
								return false;
							})

							$(selectorMain + " .accept").on('click',function(){
								var str = $(selectorOfTemplate).serialize();
								
								createRowValidateHidden(str,'yes',self);
								hideValidateTemplate(this,self);

								self = null;
								return false;
							})
						})
					}
		    		$(selectorMain + " .removeVal").on('click',function(){
					    removeOption(this);
					})
							
				},
			})	
	}

	function showOptionSelectBox(selector = null){
		$(selector + " .typeElement").change(function(){
			if($(this).val() === 'select'){
				$(selector).find(".selectbox").removeClass('hide').addClass('animated bounce');
			}else{
				$(selector).find(".selectbox").addClass('hide').removeClass('animated bounce');
			}
		})
	}


	function bindValidateForm(selector){
		<?php foreach($infoForm->content as $nameElement => $infoElement): ?>
			<?php if(count(@$infoElement['validate']['option']) > 0): ?>
				<?php foreach($infoElement['validate']['option'] as $key => $value): ?>
					<?php foreach($value as $key2 => $value2): ?>
						<?php if($value2 == 'on'): ?>
							$(selector + " .<?php echo $key ."-". $key2 ?>").attr("checked","checked");
						<?php else: ?>
							$(selector + " .<?php echo $key ."-".$key2 ?>").val("<?php echo $value2 ?>");
						<?php endif; ?>
					<?php endforeach; ?>
				<?php endforeach; ?>
			<?php endif; ?>
		<?php endforeach; ?>
	}

	function bindFilterForm(selector){
		<?php foreach($infoForm->content as $nameElement => $infoElement): ?>
			<?php if(count(@$infoElement['filter']['option']) > 0): ?>
				<?php foreach($infoElement['filter']['option'] as $key => $value): ?>
					<?php foreach($value as $key2 => $value2): ?>
						<?php if($value2 == 'on'): ?>
							$(selector + " .<?php echo $key ."-". $key2 ?>").attr("checked","checked");
							$("#<?php echo $key ."-". $key2 ?>").attr("checked","checked");
						<?php else: ?>
							$(selector + " .<?php echo $key ."-".$key2 ?>").val("<?php echo $value2 ?>");
							$("#<?php echo $key ."-".$key2 ?>").val("<?php echo $value2 ?>");
						<?php endif; ?>
					<?php endforeach; ?>
				<?php endforeach; ?>
			<?php endif; ?>
		<?php endforeach; ?>
	}

	function openTab(selector = null){
		
		$(selector + " .tabAttribute").click(function(){
			$(selector).find(".attribute").removeClass('hide');
			$(selector).find(".option").addClass('hide');
		})
		$(selector + " .tabOption").click(function(){
			$(selector).find(".option").removeClass('hide');
			$(selector).find(".attribute").addClass('hide');
		})

		$(selector + " .tabValidate").click(function(){
			$(selector).find(".validateArea").removeClass('hide');
			$(selector).find(".filterArea").addClass('hide');
		})
		$(selector + " .tabFilter").click(function(){
			$(selector).find(".filterArea").removeClass('hide');
			$(selector).find(".validateArea").addClass('hide');
		})
	}

	function previewValidateForm(selector = null){
		// console.log(selector); return false;
		var action = $("#validateForm").attr('action');
		$.ajax({
			url  : action,
			type : 'POST',
			data : {
				element  : $("#validateForm").serialize(),
				selector : selector 
			},
			success : function(data){
				var source = data.split('<div class="hide">superman</div>');
				// console.log(source);
				$(selector + ' .row-show-code').removeClass('hide').addClass('animated flipInX');
				
				$(selector + " .code").html(source[0]);
				
				$(selector + ' .filterValidate').click(function(){
					$(selector + ' .code').html(source[1]);
				});

				$(selector + ' .elementForm').click(function(){
					$(selector + ' .code').html(source[0]);
				});
			}
		})

	}

	function addValidateRow(selector,validateValue,validateName,nameElement,haveTemplate,type){
		if(type === 'validate'){
			// console.log(selector + " .validateList");
			$(selector + " .validateList").append(addOptionValidate(validateValue,validateName,nameElement,haveTemplate,type) );
		}else{
			$(selector + " .filterList").append(addOptionValidate(validateValue,validateName,nameElement,haveTemplate,type) );

		}
	}

	function removeOption(selector){	
		$(selector).parents('li').remove();
	}


	function createRowValidateHidden(str,haveTemplate = 'yes',selector = null){
		
		if(haveTemplate === 'yes'){
			var newArr = str.split('&');
			var html = ''
			$.each(newArr,function(index,val){
				val = val.replace(/%5B/g,'[');
				val = val.replace(/%5D/g,']');
				var option = val.split('=');
				html += '<input class="" type="hidden" name="' + option[0] + '" value="' + option[1] + '" />';
			})

			$(selector).parent('li').find('.hidden-edit').html(html);
		}	
	}

	function addOptionValidate(validateValue,validateName,nameElement,haveTemplate,type){
		var hiddenInputName    = 'filterName';
		var validateBreakChain = '';
		var nameValidateHidden = validateValue;
		//rename for filter-alpha and filter-alnum
		if(validateValue === 'Filter-Alpha') nameValidateHidden = 'Alpha';
		if(validateValue === 'Filter-Alnum') nameValidateHidden = 'Alnum';

		// add break chain input hidden with type Validate
		if(type === 'validate'){
			var hiddenInputName    = 'validateName';
			var validateBreakChain = '<label class="checkbox-inline">Break chain on failure<input type="checkbox" checked name="' + nameElement + '[validateBreakChain][' + nameValidateHidden + ']"/></label>';
		}
		
		if(haveTemplate === 'yes'){//if have template handle with tag a
			return 	'<li name="' + validateValue +'">'+
						'<span class="glyphicon glyphicon-plus"></span><a onclick="return false" class="show-option-validate" href=".' + validateValue + '">' + validateName + '</a>' + 
						'<span class="removeVal glyphicon glyphicon-remove"></span>' + 
						validateBreakChain + 
						'<div class="showTemplateValidate col-md-12 hide" > </div>' + 
						'<input type="hidden" value="' + nameValidateHidden + '" name="' + nameElement + '[' + hiddenInputName + '][' + nameValidateHidden + ']"/>' + 
					'</li>';
		}else{//if no template prevent event with tag a 
			return 	'<li name="' + validateValue +'">' + 
						'<span class="glyphicon glyphicon-plus"></span><a onclick="return false" class="show-option-validate a-normal" href=".' + validateValue + '">' + validateName + '</a>' + 
						'<span class="removeVal glyphicon glyphicon-remove"></span>' + 
						validateBreakChain + 
						'<input type="hidden" value="' + nameValidateHidden + '" name="' + nameElement + '[' + hiddenInputName + '][' + nameValidateHidden + ']"/>' +
					'</li>';
		}
	}
	
	function changeIdInput(selector = null,nameElement =null){
		// console.log($(selector).html());		
		$(selector + " .name-element").text("[" + nameElement + "] Element");
		$(selector + " .input-name-element-hidden").val(nameElement);
		//name
		$(selector + " .input-name-element-hidden").attr('name', nameElement + "[name]");
		//type
		$(selector + " .typeElement").attr('name', nameElement + "[type]");
		//required
		$(selector + " .requiredElement").attr('name',nameElement  + "[required]");
		//atribute
		$(selector + " .idElement").attr('name',nameElement + "[attribute][id]");
		$(selector + " .classElement").attr('name',nameElement + "[attribute][class]");
		$(selector + " .placeElement").attr('name',nameElement + "[attribute][placeholder]");
		$(selector + " .valueElement").attr('name',nameElement + "[attribute][value]");
		$(selector + " .attrElement").attr('name',nameElement  + "[attribute][attr]");
		//option
		$(selector + " .nameLabel").attr('name',nameElement  + "[option][nameLabel]");
		$(selector + " .classLabel").attr('name',nameElement  + "[option][classLabel]");
		$(selector + " .forLabel").attr('name',nameElement  + "[option][forLabel]");
		$(selector + " .emptyOption").attr('name',nameElement  + "[option][emptyOption]");
		$(selector + " .valueOption").attr('name',nameElement  + "[option][valueOption]");
		$(selector + " .nameOption").attr('name',nameElement  + "[option][nameOption]");
	}
	
	function showValidateTemplate(selector){
		$(selector).parents('.showTemplateValidate').removeClass('hide').addClass("animated zoomIn");
	}
	
	function hideValidateTemplate(selector,tagA){
		$(selector).parents('.showTemplateValidate').removeClass("animated zoomIn").addClass('hide');
		$(tagA).prev('span').removeClass('glyphicon-minus').addClass('glyphicon-plus');
	}
	
	function openCloseElement(selector){
		$(selector).parent().next().slideToggle();
		if($(selector).hasClass('glyphicon-plus')){
			$(selector).removeClass("glyphicon-plus").addClass("glyphicon-minus");
		}else{
			$(selector).removeClass("glyphicon-minus").addClass("glyphicon-plus");
		}
	}

	function lazySaveButton(){
		var offset = 250;
		var duration = 200;
		 
		$(window).scroll(function() {
			if ($(this).scrollTop() > offset) {
				$("#lazyButtonSave").fadeIn(duration);
				if(!$("#lazyLabelAddNewElement").hasClass("hide")){
					$("#lazyLabelAddNewElement").fadeIn(duration);
				}

				$("#lazyLabelAddNewElement").on("click",function(e){
					$(this).addClass("hide");
					$("#lazyAddNewElement").fadeIn(duration);
					$("#lazyNameElement").removeClass("hide");
					$("#lazyNameElement").focus();
					$("#lazyNameElement").on("blur",function(){
						if($(this).val() === ''){
							$(this).addClass("hide");
							$("#lazyAddNewElement").fadeOut(duration);
							$("#lazyLabelAddNewElement").removeClass("hide");
						}
					});
				});

				$("#lazyAddNewElement").on("click",function(){
					if($("#lazyNameElement").val() !== ''){
						$("#nameElement").val($("#lazyNameElement").val());
						$("#addNewElement").trigger("click");	
						$("#lazyNameElement").focus();
						$("#lazyNameElement").val("");
					}
				});	
				
			} else {
				$("#lazyButtonSave").fadeOut(duration);
				$("#lazyLabelAddNewElement").fadeOut(100).removeClass("hide");
				$("#lazyAddNewElement").fadeOut(duration);
				$("#lazyNameElement").addClass("hide").val('');	 
			}
		 
		});
	}

</script>